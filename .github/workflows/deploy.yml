name: Build and Deploy

on:
  push:
    branches:
      - deploy 


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Node.js 설치 (React 빌드)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.8.1'

      - name: Install dependencies for React
        run: |
          cd ./frontend  # React 프로젝트 폴더로 이동
          npm install

      - name: Build React
        run: |
          cd ./frontend  # React 프로젝트 폴더로 이동
          npm run build

      # Java 설정 (Spring Boot 빌드)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build Spring Boot
        run: |
          cd ./backend  # Spring Boot 프로젝트 폴더로 이동
          ./gradlew clean build -x test

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with: 
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          

      # 서버에 배포하는 단계 (예: SSH 사용하여 서버에 복사 및 재시작)
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}                                          # 서버의 IP 주소 또는 도메인
          username: ${{ secrets.SERVER_USER }}                                      # 서버 사용자
          password: ${{ secrets.SSH_PRIVATE_KEY }}                                  # 서버 비밀번호 (또는 SSH Key를 사용할 수도 있음)
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa                   # Github Action 시크릿에서 private key 서버로 복사
            chmod 600 ~/.ssh/id_rsa                                
            ssh-keyscan github.com >> ~/.ssh/known_hosts                            # Github의 호스트 키 추가 
            cd /server                                                              # 서버의 프로젝트 디렉토리로 이동
            git pull git@github.com:choisimo/nodove_careernote_project_react.git    # 서버에서 최신 코드 가져오기
            cd backend                                                              # Spring Boot 디렉토리로 이동
            ./gradlew clean build -x test                                           # Spring Boot 빌드 (no test)
            nohup java -jar build/libs/*.jar >> /server/backend/backend.log 2>&1 &  # 새로운 백엔드 애플리케이션 실행
            cd ../frontend                                                          # React 디렉토리로 이동
            mv build/* /server/frontend/build/                                      # React 빌드된 파일을 서버 경로로 복사
  
